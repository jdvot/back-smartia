openapi: 3.0.3
info:
  title: SmartDoc AI API
  description: RESTful API for document processing with OCR and AI summarization
  version: 1.0.0
  contact:
    name: SmartDoc AI Team
    email: support@smartdoc.ai

servers:
  - url: http://localhost:8080
    description: Development server
  - url: https://smartdoc-api.railway.app
    description: Production server (Railway)
  - url: https://smartdoc-api.onrender.com
    description: Production server (Render)

security:
  - BearerAuth: []

paths:
  /docs/upload:
    post:
      summary: Upload a document
      description: Upload a document file for processing
      operationId: uploadDocument
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The document file to upload
              required:
                - file
      responses:
        '201':
          description: Document uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /docs/{docId}/ocr:
    post:
      summary: Trigger OCR processing
      description: Trigger OCR processing for a specific document
      operationId: triggerOCR
      parameters:
        - name: docId
          in: path
          required: true
          schema:
            type: string
          description: The document ID
      responses:
        '200':
          description: OCR processing triggered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OCRResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Document not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /docs/{docId}/summary:
    post:
      summary: Trigger summary generation
      description: Trigger AI summary generation for a specific document
      operationId: triggerSummary
      parameters:
        - name: docId
          in: path
          required: true
          schema:
            type: string
          description: The document ID
      responses:
        '200':
          description: Summary generation triggered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummaryResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Document not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /docs/history:
    get:
      summary: Get document history
      description: Get all documents for the authenticated user
      operationId: getDocumentHistory
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of documents per page
      responses:
        '200':
          description: Document history retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentHistoryResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /docs/{docId}:
    get:
      summary: Get document details
      description: Get detailed information about a specific document
      operationId: getDocument
      parameters:
        - name: docId
          in: path
          required: true
          schema:
            type: string
          description: The document ID
      responses:
        '200':
          description: Document details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Document not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete document
      description: Delete a specific document
      operationId: deleteDocument
      parameters:
        - name: docId
          in: path
          required: true
          schema:
            type: string
          description: The document ID
      responses:
        '204':
          description: Document deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Document not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Firebase Auth ID token

  schemas:
    Document:
      type: object
      properties:
        id:
          type: string
          description: Unique document identifier
        filename:
          type: string
          description: Original filename
        size:
          type: integer
          description: File size in bytes
        mimeType:
          type: string
          description: MIME type of the document
        uploadDate:
          type: string
          format: date-time
          description: Upload timestamp
        userId:
          type: string
          description: ID of the user who uploaded the document
        status:
          type: string
          enum: [uploaded, processing, completed, failed]
          description: Current processing status
        ocrText:
          type: string
          nullable: true
          description: Extracted text from OCR
        summary:
          type: string
          nullable: true
          description: AI-generated summary
        ocrStatus:
          type: string
          enum: [pending, processing, completed, failed]
          default: pending
          description: OCR processing status
        summaryStatus:
          type: string
          enum: [pending, processing, completed, failed]
          default: pending
          description: Summary generation status
      required:
        - id
        - filename
        - size
        - mimeType
        - uploadDate
        - userId
        - status

    UploadResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Document uploaded successfully"
        data:
          $ref: '#/components/schemas/Document'

    OCRResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "OCR processing triggered successfully"
        data:
          type: object
          properties:
            docId:
              type: string
              description: Document ID
            ocrText:
              type: string
              nullable: true
              description: Extracted text from OCR
            status:
              type: string
              enum: [pending, processing, completed, failed]
              description: OCR processing status

    SummaryResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Summary generation triggered successfully"
        data:
          type: object
          properties:
            docId:
              type: string
              description: Document ID
            summary:
              type: string
              nullable: true
              description: AI-generated summary
            status:
              type: string
              enum: [pending, processing, completed, failed]
              description: Summary generation status

    DocumentHistoryResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Document history retrieved successfully"
        data:
          type: object
          properties:
            documents:
              type: array
              items:
                $ref: '#/components/schemas/Document'
            pagination:
              type: object
              properties:
                page:
                  type: integer
                  description: Current page number
                limit:
                  type: integer
                  description: Number of items per page
                total:
                  type: integer
                  description: Total number of documents
                totalPages:
                  type: integer
                  description: Total number of pages

    DocumentResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Document details retrieved successfully"
        data:
          $ref: '#/components/schemas/Document'

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          description: Error message
        error:
          type: string
          description: Error code
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
      required:
        - success
        - message 