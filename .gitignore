# Environment variables
.env
.env.local
.env.production

# Firebase service account keys
firebase-service-account.json
*-firebase-adminsdk-*.json

# Build artifacts
bin/
dist/
*.exe
*.exe~
*.dll
*.so
*.dylib

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool
*.out

# Dependency directories
vendor/

# Go workspace file
go.work

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Logs
*.log
logs/

# Temporary files
tmp/
temp/

# Docker
.dockerignore

# Railway
.railway/

# Render
.render/

# Generated files (regenerated from OpenAPI)
# api/generated.go  # Uncomment if you want to ignore generated code

# Local development
local/
dev/

PORT=8080
ENV=development

FIREBASE_PROJECT_ID=ton-projet-firebase
FIREBASE_SERVICE_ACCOUNT_KEY={"type":"service_account",...}
FIREBASE_STORAGE_BUCKET=ton-bucket-firebase

OCR_SERVICE_URL=https://api.ocr.space/parse/image
OCR_API_KEY=ta-cle-ocr

AI_SERVICE_URL=https://api.openai.com/v1/chat/completions
AI_API_KEY=ta-cle-openai

CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080
LOG_LEVEL=info

# Local data directory (for testing)
data/ 