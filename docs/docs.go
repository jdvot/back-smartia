// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "SmartDoc AI Team",
            "email": "support@smartdoc.ai"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/docs/upload": {
            "post": {
                "summary": "Upload a document",
                "description": "Upload a document file for processing",
                "operationId": "uploadDocument",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "type": "file",
                        "description": "The document file to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Document uploaded successfully",
                        "schema": {
                            "$ref": "#/definitions/UploadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/docs/{docId}/ocr": {
            "post": {
                "summary": "Trigger OCR processing",
                "description": "Trigger OCR processing for a specific document",
                "operationId": "triggerOCR",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "The document ID",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OCR processing triggered successfully",
                        "schema": {
                            "$ref": "#/definitions/OCRResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Document not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/docs/{docId}/summary": {
            "post": {
                "summary": "Trigger summary generation",
                "description": "Trigger AI summary generation for a specific document",
                "operationId": "triggerSummary",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "The document ID",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Summary generation triggered successfully",
                        "schema": {
                            "$ref": "#/definitions/SummaryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Document not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/docs/history": {
            "get": {
                "summary": "Get document history",
                "description": "Get all documents for the authenticated user",
                "operationId": "getDocumentHistory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "minimum": 1,
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "minimum": 1,
                        "maximum": 100,
                        "description": "Number of documents per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document history retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/DocumentHistoryResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/docs/{docId}": {
            "get": {
                "summary": "Get document details",
                "description": "Get detailed information about a specific document",
                "operationId": "getDocument",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "The document ID",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document details retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/DocumentResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Document not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete document",
                "description": "Delete a specific document",
                "operationId": "deleteDocument",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "The document ID",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Document deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Document not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "summary": "Health check",
                "description": "Health check endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Document": {
            "type": "object",
            "required": [
                "id",
                "filename",
                "size",
                "mimeType",
                "uploadDate",
                "userId",
                "status"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique document identifier"
                },
                "filename": {
                    "type": "string",
                    "description": "Original filename"
                },
                "size": {
                    "type": "integer",
                    "description": "File size in bytes"
                },
                "mimeType": {
                    "type": "string",
                    "description": "MIME type of the document"
                },
                "uploadDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Upload timestamp"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of the user who uploaded the document"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "uploaded",
                        "processing",
                        "completed",
                        "failed"
                    ],
                    "description": "Current processing status"
                },
                "ocrText": {
                    "type": "string",
                    "nullable": true,
                    "description": "Extracted text from OCR"
                },
                "summary": {
                    "type": "string",
                    "nullable": true,
                    "description": "AI-generated summary"
                },
                "ocrStatus": {
                    "type": "string",
                    "enum": [
                        "pending",
                        "processing",
                        "completed",
                        "failed"
                    ],
                    "default": "pending",
                    "description": "OCR processing status"
                },
                "summaryStatus": {
                    "type": "string",
                    "enum": [
                        "pending",
                        "processing",
                        "completed",
                        "failed"
                    ],
                    "default": "pending",
                    "description": "Summary generation status"
                }
            }
        },
        "UploadResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Document uploaded successfully"
                },
                "data": {
                    "$ref": "#/definitions/Document"
                }
            }
        },
        "OCRResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "OCR processing triggered successfully"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "docId": {
                            "type": "string",
                            "description": "Document ID"
                        },
                        "ocrText": {
                            "type": "string",
                            "nullable": true,
                            "description": "Extracted text from OCR"
                        },
                        "status": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "processing",
                                "completed",
                                "failed"
                            ],
                            "description": "OCR processing status"
                        }
                    }
                }
            }
        },
        "SummaryResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Summary generation triggered successfully"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "docId": {
                            "type": "string",
                            "description": "Document ID"
                        },
                        "summary": {
                            "type": "string",
                            "nullable": true,
                            "description": "AI-generated summary"
                        },
                        "status": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "processing",
                                "completed",
                                "failed"
                            ],
                            "description": "Summary generation status"
                        }
                    }
                }
            }
        },
        "DocumentHistoryResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Document history retrieved successfully"
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "documents": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Document"
                            }
                        },
                        "pagination": {
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "integer",
                                    "description": "Current page number"
                                },
                                "limit": {
                                    "type": "integer",
                                    "description": "Number of items per page"
                                },
                                "total": {
                                    "type": "integer",
                                    "description": "Total number of documents"
                                },
                                "totalPages": {
                                    "type": "integer",
                                    "description": "Total number of pages"
                                }
                            }
                        }
                    }
                }
            }
        },
        "DocumentResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Document details retrieved successfully"
                },
                "data": {
                    "$ref": "#/definitions/Document"
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "required": [
                "success",
                "message"
            ],
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "description": "Error message"
                },
                "error": {
                    "type": "string",
                    "description": "Error code"
                },
                "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Error timestamp"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "Firebase Auth ID token"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "SmartDoc AI API",
	Description:      "RESTful API for document processing with OCR and AI summarization",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
} 